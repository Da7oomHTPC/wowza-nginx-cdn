user                                   nginx;
worker_processes                       auto;

events {
    worker_connections                 4096;
}


http {
    include                            mime.types;
    default_type                       application/octet-stream;

    sendfile                           on;

    keepalive_timeout                  65;

    log_format  main                  '$remote_addr - $remote_user [$time_local] "$request" '
                                      '$status $body_bytes_sent "$http_referer" '
                                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log                       logs/access.log  main;
    #error_log                        logs/error.log;

    proxy_cache_use_stale             updating;
    proxy_cache_path                  /mnt/store/nginx_cache levels=1:2 keys_zone=dvr_cache:10m max_size=2g inactive=30m use_temp_path=off;
    add_header X-Cache-Status         $upstream_cache_status;
    proxy_cache                       dvr_cache;
    proxy_cache_key                   $uri;
    proxy_set_header Accept-Encoding  "";

    gzip                              on;
    gzip_types                        application/vnd.apple.mpegurl;

    server {
        listen                        8080;
        server_name                   _;
        set  $wowza_ip               '127.0.0.1';

        location ~ \.(ts)$ {
            proxy_pass                http://$wowza_ip:1935;
        }

        location ~ chunklist.*\.(m3u8)$ {
	    proxy_pass		      http://$wowza_ip:1935$uri;

            header_filter_by_lua_block { 
                ngx.header.content_length = nil
            }

            body_filter_by_lua_block {
                if ngx.var.arg_h then
                    ngx.arg[1] = ngx.re.sub(ngx.arg[1],'{encKeySessionid}', "h=" .. ngx.var.arg_h)
                    ngx.header.content_length = string.len(ngx.arg[1]) .. "\\n"
                end
            }
        }

        location ~ playlist.*\.(m3u8)$ {
            proxy_pass 		    http://$wowza_ip:1935$uri?DVR;

            header_filter_by_lua_block { 
                ngx.header.content_length = nil
            }

            body_filter_by_lua_block {
                if ngx.var.arg_h then
                    ngx.arg[1] = ngx.re.gsub(ngx.arg[1],".m3u8", ".m3u8?h=" .. ngx.var.arg_h)
                    ngx.header.content_length = string.len(ngx.arg[1]) .. "\\n"
                end
            }
        }

        location /nginx_status {
                   stub_status on;
                   access_log   off;
                   allow 127.0.0.1;
                   deny all;
        }
    }
}
